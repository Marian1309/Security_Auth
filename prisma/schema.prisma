generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String?
  email    String  @unique
  password String?

  activationToken String?
  tokenExpiration DateTime?
  isActive        Boolean   @default(false)

  failedAttempts Int       @default(0)
  isBlocked      Boolean   @default(false)
  blockedUntil   DateTime?

  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model LoginAttempt {
  id        Int      @id @default(autoincrement())
  email     String
  ipAddress String
  success   Boolean
  createdAt DateTime @default(now())
}

model Account {
  id                String  @id @default(cuid())
  userId            Int
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expires      DateTime
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
